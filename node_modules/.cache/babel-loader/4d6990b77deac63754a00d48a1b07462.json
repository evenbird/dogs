{"ast":null,"code":"var _jsxFileName = \"/Users/pzeng/react/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { render } from \"react-dom\";\nimport Dogs from \"./Dogs/dogs\";\nimport { simpleAction } from \"./actions/simpleAction.js\";\nimport { connect } from \"react-redux\"; // import {simpleAction} from './actions/simpleAction'\n\nconst mapStateToProps = state => {\n  return {\n    dogs: state.result\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {// persons: [\n      //   { name: \"Max\", age: 28 },\n      //   { name: \"Nanu\", age: 25 },\n      //   { name: \"Ok\", age: 24 }\n      // ],\n      // otherState: \"some value\",\n      // showPerson: false\n    };\n\n    this.switchNameHandler = event => {\n      // console.log(this.state);\n      this.setState({\n        persons: [{\n          name: \"Maximilian\",\n          age: 30\n        }, {\n          name: \"Nanu\",\n          age: 28\n        }, {\n          name: event.target.value,\n          age: 28\n        }]\n      });\n    };\n\n    this.clickHandler = () => {\n      this.setState({\n        persons: [{\n          name: \"Maximilian\",\n          age: 30\n        }, {\n          name: \"Nanu\",\n          age: 28\n        }, {\n          name: \"daniel zeng\",\n          age: 28\n        }]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.simpleAction();\n  }\n\n  // togglePersonsHandler = () => {\n  // }\n  // simpleAction = event => {};\n  render() {\n    // console.log(this.props.dogs);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"swith name\"), React.createElement(Dogs, {\n      click: this.clickHandler,\n      name: this.state.persons[0].name,\n      age: this.state.persons[0].age,\n      changed: this.switchNameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Dogs, {\n      click: this.clickHandler,\n      name: this.state.persons[1].name,\n      age: this.state.persons[1].age // changed={this.switchNameHandler}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Hello!!\"), React.createElement(Dogs, {\n      click: this.clickHandler,\n      name: this.state.persons[2].name,\n      age: this.state.persons[2].age // changed={(evnent)=>{this.switchNameHandler(evnent)}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Hello!!\")));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/pzeng/react/my-app/src/App.js"],"names":["React","Component","render","Dogs","simpleAction","connect","mapStateToProps","state","dogs","result","mapDispatchToProps","dispatch","App","switchNameHandler","event","setState","persons","name","age","target","value","clickHandler","componentDidMount","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { render } from \"react-dom\";\nimport Dogs from \"./Dogs/dogs\";\nimport { simpleAction } from \"./actions/simpleAction.js\";\nimport { connect } from \"react-redux\";\n// import {simpleAction} from './actions/simpleAction'\n\nconst mapStateToProps = state => {\n  return {\n    dogs: state.result\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n});\n\nclass App extends Component {\n  state = {\n    // persons: [\n    //   { name: \"Max\", age: 28 },\n    //   { name: \"Nanu\", age: 25 },\n    //   { name: \"Ok\", age: 24 }\n    // ],\n    // otherState: \"some value\",\n    // showPerson: false\n  };\n\n  componentDidMount() {\n    this.props.simpleAction();\n  }\n\n  switchNameHandler = event => {\n    // console.log(this.state);\n    this.setState({\n      persons: [\n        { name: \"Maximilian\", age: 30 },\n        { name: \"Nanu\", age: 28 },\n        { name: event.target.value, age: 28 }\n      ]\n    });\n  };\n\n  clickHandler = () => {\n    this.setState({\n      persons: [\n        { name: \"Maximilian\", age: 30 },\n        { name: \"Nanu\", age: 28 },\n        { name: \"daniel zeng\", age: 28 }\n      ]\n    });\n  };\n\n  // togglePersonsHandler = () => {\n\n  // }\n\n  // simpleAction = event => {};\n\n  render() {\n    // console.log(this.props.dogs);\n\n    return (\n      <div className=\"App\">\n        <div>\n          <button onClick={this.clickHandler}>swith name</button>\n          {/* <button onClick={this.simpleAction}>Test redux action</button> */}\n          <Dogs\n            click={this.clickHandler}\n            name={this.state.persons[0].name}\n            age={this.state.persons[0].age}\n            changed={this.switchNameHandler}\n          />\n          <Dogs\n            click={this.clickHandler}\n            name={this.state.persons[1].name}\n            age={this.state.persons[1].age}\n            // changed={this.switchNameHandler}\n          >\n            Hello!!\n          </Dogs>\n          <Dogs\n            click={this.clickHandler}\n            name={this.state.persons[2].name}\n            age={this.state.persons[2].age}\n            // changed={(evnent)=>{this.switchNameHandler(evnent)}}\n          >\n            Hello!!\n          </Dogs>\n          {/* <pre>{JSON.stringify(this.props)}</pre> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}